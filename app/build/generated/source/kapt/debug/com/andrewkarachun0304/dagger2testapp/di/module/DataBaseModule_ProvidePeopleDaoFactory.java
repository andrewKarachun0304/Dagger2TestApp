// Generated by Dagger (https://dagger.dev).
package com.andrewkarachun0304.dagger2testapp.di.module;

import com.andrewkarachun0304.dagger2testapp.database.AppDataBase;
import com.andrewkarachun0304.dagger2testapp.database.dao.PeopleDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataBaseModule_ProvidePeopleDaoFactory implements Factory<PeopleDao> {
  private final DataBaseModule module;

  private final Provider<AppDataBase> appDataBaseProvider;

  public DataBaseModule_ProvidePeopleDaoFactory(DataBaseModule module,
      Provider<AppDataBase> appDataBaseProvider) {
    this.module = module;
    this.appDataBaseProvider = appDataBaseProvider;
  }

  @Override
  public PeopleDao get() {
    return providePeopleDao(module, appDataBaseProvider.get());
  }

  public static DataBaseModule_ProvidePeopleDaoFactory create(DataBaseModule module,
      Provider<AppDataBase> appDataBaseProvider) {
    return new DataBaseModule_ProvidePeopleDaoFactory(module, appDataBaseProvider);
  }

  public static PeopleDao providePeopleDao(DataBaseModule instance, AppDataBase appDataBase) {
    return Preconditions.checkNotNull(instance.providePeopleDao(appDataBase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
