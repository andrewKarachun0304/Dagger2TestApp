// Generated by Dagger (https://dagger.dev).
package com.andrewkarachun0304.dagger2testapp.di.module;

import com.andrewkarachun0304.dagger2testapp.database.AppDataBase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataBaseModule_ProvideDataBaseFactory implements Factory<AppDataBase> {
  private final DataBaseModule module;

  public DataBaseModule_ProvideDataBaseFactory(DataBaseModule module) {
    this.module = module;
  }

  @Override
  public AppDataBase get() {
    return provideDataBase(module);
  }

  public static DataBaseModule_ProvideDataBaseFactory create(DataBaseModule module) {
    return new DataBaseModule_ProvideDataBaseFactory(module);
  }

  public static AppDataBase provideDataBase(DataBaseModule instance) {
    return Preconditions.checkNotNull(instance.provideDataBase(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
